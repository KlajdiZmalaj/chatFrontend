{"version":3,"sources":["redux-store/models/auth.js","redux-store/models/main.js","views/Login/LeftSide.jsx","views/Login/Login.jsx","views/Home/Home.jsx","views/Register/Register.jsx","routes/Login.jsx","routes/Home.jsx","routes/Register.jsx","config/index.js","Root.jsx","socket.js","services/auth.js","redux-store/sagas/AuthSagas.js","services/main.js","redux-store/sagas/MainSagas.js","redux-store/sagas/index.js","redux-store/store.js","App.js","serviceWorker.js","index.js"],"names":["createActions","setUnauthorization","getLogin","setLoginData","checkToken","submitMsg","createRoom","deleteRoom","Creators","Types","INITIAL_STATE","loginData","JSON","parse","localStorage","getItem","reducer","createReducer","SET_LOGIN_DATA","state","SET_UNAUTHORIZATION","setItem","setRoomData","getRoomData","getRooms","setRooms","setActiveRoom","updateRoomMessages","getRegister","roomData","rooms","activeRoom","SET_ROOM_DATA","SET_ROOMS","SET_ACTIVE_ROOM","className","connect","AuthActions","useState","formData","setFormData","console","log","LeftSide","aria-hidden","placeholder","type","onChange","e","username","target","value","password","onClick","preventDefault","stopPropagation","window","location","hash","auth","main","MainActions","useEffect","token","el","document","querySelector","setTimeout","scrollIntoView","behavior","name","inputValue","setInputMsg","visible","isAdmin","dragX","setDragX","map","room","key","_id","room-id","draggable","onDragStart","clientX","onDragEnd","clientY","socket","emit","src","image","alt","id","style","backgroundImage","messages","sort","a","b","msg","placement","user","title","moment","date","format","text","onKeyPress","charCode","desc","img","redirectAndClear","password2","notification","description","innerWidth","duration","data-route","isLocal","href","match","endpoint","hasCode","error","status","response","parseInt","handleError","store","dispatch","message","data","errors","Object","values","Promise","reject","io","on","loadSocket","exact","path","to","render","instanceAxios","axios","create","baseURL","interceptors","request","use","config","headers","Accept","Login","get","params","catch","post","roomId","call","AuthReq","put","stringify","callBack","register","MainReq","userFound","select","rootSaga","all","takeLatest","AuthGenerators","MainGenerators","rootReducer","combineReducers","AuthReducer","MainReducer","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","runSaga","run","configureStore","App","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ade4823.chunk.js","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nconst { Types, Creators } = createActions({\r\n  setUnauthorization: [],\r\n  getLogin: [\"username\", \"password\"],\r\n  setLoginData: [\"loginData\"],\r\n  checkToken: [\"token\"],\r\n  submitMsg: [\"id\", \"text\", \"token\"],\r\n  createRoom: [\"name\", \"image\", \"description\", \"token\", \"callBack\"],\r\n  deleteRoom: [\"id\", \"token\"],\r\n});\r\n\r\nexport const AuthTypes = Types;\r\nexport default Creators;\r\n\r\nconst INITIAL_STATE = {\r\n  loginData: JSON.parse(localStorage.getItem(\"loginData\") || \"{}\") || {},\r\n};\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  SET_LOGIN_DATA: (state, { loginData }) => ({\r\n    ...state,\r\n    loginData,\r\n  }),\r\n  SET_UNAUTHORIZATION: () => {\r\n    localStorage.setItem(\"loginData\", \"{}\");\r\n    return {\r\n      ...INITIAL_STATE,\r\n      loginData: {},\r\n    };\r\n  },\r\n});\r\n","import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nconst { Types, Creators } = createActions({\r\n  setRoomData: [\"roomData\"],\r\n  getRoomData: [\"id\"],\r\n  getRooms: [],\r\n  setRooms: [\"rooms\"],\r\n  setActiveRoom: [\"activeRoom\"],\r\n  updateRoomMessages: [\"data\"],\r\n  getRegister: [\"username\", \"password\", \"redirectAndClear\"],\r\n});\r\n\r\nexport const MainTypes = Types;\r\nexport default Creators;\r\n\r\nconst INITIAL_STATE = {\r\n  roomData: {},\r\n  rooms: [],\r\n  activeRoom: \"\",\r\n};\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  SET_ROOM_DATA: (state, { roomData }) => ({\r\n    ...state,\r\n    roomData,\r\n  }),\r\n  SET_ROOMS: (state, { rooms }) => ({\r\n    ...state,\r\n    rooms,\r\n  }),\r\n  SET_ACTIVE_ROOM: (state, { activeRoom }) => ({\r\n    ...state,\r\n    activeRoom,\r\n  }),\r\n});\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return <div className=\"login-left\"></div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AuthActions } from \"redux-store/models\";\r\nimport { connect } from \"react-redux\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport \"styles/style_login.css\";\r\n\r\nconst Login = ({ getLogin }) => {\r\n  const [formData, setFormData] = useState({});\r\n  console.log(\"ca ka\", formData);\r\n  return (\r\n    <>\r\n      <LeftSide />\r\n      <form className=\"loginForm\">\r\n        <i className=\"fal fa-user-circle\" aria-hidden=\"true\"></i>{\" \"}\r\n        <div>\r\n          <i className=\"fal fa-user\" aria-hidden=\"true\"></i>\r\n          <input\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setFormData({\r\n                ...formData,\r\n                username: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i className=\"fal fa-lock\" aria-hidden=\"true\"></i>\r\n          <input\r\n            placeholder=\"Passcode\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setFormData({\r\n                ...formData,\r\n                password: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            getLogin(formData.username, formData.password);\r\n          }}\r\n        >\r\n          Loggin\r\n        </button>\r\n        <p>\r\n          Dont have account?{\" \"}\r\n          <span\r\n            onClick={() => {\r\n              window.location.hash = \"register\";\r\n            }}\r\n          >\r\n            Register\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, AuthActions)(Login);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AuthActions, MainActions } from \"redux-store/models\";\r\nimport { connect } from \"react-redux\";\r\nimport \"styles/style_home.css\";\r\nimport { Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\nconst Home = ({\r\n  loginData = {},\r\n  setUnauthorization,\r\n  getRooms,\r\n  rooms,\r\n  setActiveRoom,\r\n  activeRoom,\r\n  getRoomData,\r\n  roomData,\r\n  setRoomData,\r\n  checkToken,\r\n  submitMsg,\r\n  createRoom,\r\n  deleteRoom,\r\n}) => {\r\n  useEffect(() => {\r\n    checkToken(loginData.token);\r\n    getRooms();\r\n  }, []);\r\n  useEffect(() => {\r\n    const el = document.querySelector(\".msg:last-child\");\r\n    if (el)\r\n      setTimeout(() => {\r\n        el.scrollIntoView({ behavior: \"smooth\" });\r\n      }, 300);\r\n  }, [roomData?.name]);\r\n  const [inputValue, setInputMsg] = useState(\"\");\r\n  const [formData, setFormData] = useState({ visible: false });\r\n  const isAdmin = loginData.isAdmin;\r\n  const [dragX, setDragX] = useState(0);\r\n  //console.log(\"dataas activeRoom roomData\", roomData);\r\n  return (\r\n    <div className=\"homePage\">\r\n      <div className=\"homePage--left\">\r\n        {rooms.map((room) => {\r\n          return (\r\n            <div\r\n              key={room._id}\r\n              room-id={room._id}\r\n              className={`room${activeRoom === room._id ? \" active\" : \"\"}${\r\n                dragX === room._id ? \" slideRight\" : \"\"\r\n              }`}\r\n              draggable={isAdmin}\r\n              onDragStart={(e) => {\r\n                setDragX(0);\r\n                setDragX(e.clientX);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                console.log(\"ca ka e\", e, e.clientX, e.clientY);\r\n                if (e.clientX - dragX >= 100) {\r\n                  setDragX(room._id);\r\n                }\r\n              }}\r\n              onClick={() => {\r\n                setActiveRoom(room._id);\r\n                getRoomData(room._id);\r\n                if (activeRoom) {\r\n                  window.socket.emit(\"unsubscribe\", activeRoom);\r\n                }\r\n                window.socket.emit(\"subscribe\", room._id);\r\n              }}\r\n            >\r\n              <i\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  deleteRoom(room._id, loginData.token);\r\n                }}\r\n                className=\"fal fa-times\"\r\n                aria-hidden=\"true\"\r\n              ></i>\r\n              <img src={room?.image} alt=\"\" /> <span>{room?.name}</span>\r\n              {activeRoom === room._id ? (\r\n                <i\r\n                  className=\"fal fa-sign-out\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    setActiveRoom(\"\");\r\n                    setRoomData({});\r\n                  }}\r\n                ></i>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        })}\r\n        {isAdmin && (\r\n          <button\r\n            onClick={() => {\r\n              setFormData({ ...formData, visible: true });\r\n            }}\r\n            className=\"createRoom\"\r\n          >\r\n            Create Room\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"homePage--right\">\r\n        <div className=\"homePage--right__top\">\r\n          <p>\r\n            Welcome <span>{loginData.username}</span>{\" \"}\r\n          </p>\r\n          <p id=\"roomName\">{roomData?.name || \"Select a Room\"}</p>\r\n          {/* <button\r\n            onClick={() => {\r\n              checkToken(loginData.token);\r\n            }}\r\n          >\r\n            <i className=\"fal fa-badge-check\"></i> Check token\r\n          </button> */}\r\n          <button\r\n            onClick={() => {\r\n              setUnauthorization();\r\n            }}\r\n          >\r\n            <i className=\"fal fa-sign-out\"></i> Log OUT\r\n          </button>\r\n        </div>\r\n        <div className=\"homePage--right__cover\">\r\n          <div style={{ backgroundImage: `url(${roomData?.image})` }}>\r\n            <div></div>\r\n            <img src={roomData?.image} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"homePage--right__messages\">\r\n          <div id=\"msgWrapper\" className=\"msg-wrapper\">\r\n            {roomData?.messages ? (\r\n              roomData?.messages\r\n                ?.sort((a, b) => a - b)\r\n                .map((msg) => {\r\n                  return (\r\n                    <Tooltip\r\n                      key={msg._id}\r\n                      placement={\r\n                        loginData?.username === msg?.user?.username\r\n                          ? \"topRight\"\r\n                          : \"topLeft\"\r\n                      }\r\n                      title={`Sent at ${moment(msg.date).format(\r\n                        \"MMMM Do YYYY, h:mm:ss a\"\r\n                      )}`}\r\n                    >\r\n                      <div\r\n                        className={`msg${\r\n                          loginData?.username === msg?.user?.username\r\n                            ? \" me\"\r\n                            : \"\"\r\n                        }`}\r\n                      >\r\n                        <div className=\"userMsg\">{msg?.user?.username}</div>\r\n                        <div className=\"text\">{msg?.text}</div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  );\r\n                })\r\n            ) : (\r\n              <span>\r\n                {!activeRoom\r\n                  ? \"No room selected.\"\r\n                  : \"No messages yet in this room. Start typing your first message.\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className={!activeRoom ? \"disable inputbar\" : \"inputbar\"}>\r\n            <i className=\"far fa-grin-stars\"></i>\r\n            <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onKeyPress={(e) => {\r\n                if (e.charCode == 13) {\r\n                  setInputMsg(\"\");\r\n                  submitMsg(roomData._id, inputValue, loginData?.token);\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                setInputMsg(e.target.value);\r\n              }}\r\n            />\r\n            <i\r\n              className=\"fad fa-paper-plane\"\r\n              onClick={() => {\r\n                setInputMsg(\"\");\r\n                submitMsg(roomData._id, inputValue, loginData?.token);\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {formData.visible && (\r\n        <div className=\"popUpForm\">\r\n          <div className=\"popUpForm--title\">\r\n            Create Room{\" \"}\r\n            <i\r\n              onClick={() => {\r\n                setFormData({ ...formData, visible: false });\r\n              }}\r\n              className=\"fal fa-times\"\r\n              aria-hidden=\"true\"\r\n            ></i>{\" \"}\r\n          </div>\r\n          <div className=\"popUpForm--field\">\r\n            <span>Name : </span>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              placeholder=\"#\"\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, name: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"popUpForm--field\">\r\n            <span>Description : </span>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={formData.desc}\r\n              placeholder=\"#\"\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, desc: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"popUpForm--field\">\r\n            <span>Image URL : </span>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"https://imageURL.com\"\r\n              value={formData.img}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, img: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"popUpForm--field\">\r\n            <button\r\n              onClick={() => {\r\n                createRoom(\r\n                  formData.name,\r\n                  formData.img,\r\n                  formData.desc,\r\n                  loginData.token,\r\n                  () => {\r\n                    setFormData({ visible: false });\r\n                    getRooms();\r\n                  }\r\n                );\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mstp = ({\r\n  auth: { loginData },\r\n  main: { rooms, activeRoom, roomData },\r\n}) => ({\r\n  loginData,\r\n  rooms,\r\n  activeRoom,\r\n  roomData,\r\n});\r\n\r\nexport default connect(mstp, { ...MainActions, ...AuthActions })(Home);\r\n","import React, { useState } from \"react\";\r\nimport { MainActions } from \"redux-store/models\";\r\nimport { connect } from \"react-redux\";\r\nimport LeftSide from \"../Login/LeftSide\";\r\nimport \"styles/style_login.css\";\r\nimport { notification } from \"antd\";\r\n\r\nconst Register = ({ getRegister }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const redirectAndClear = () => {\r\n    setFormData({ username: \"\", password: \"\", password2: \"\" });\r\n  };\r\n  return (\r\n    <>\r\n      <LeftSide />\r\n      <form className=\"loginForm\">\r\n        <i className=\"fal fa-user-plus\" aria-hidden=\"true\"></i>\r\n        <div>\r\n          <i className=\"fal fa-user\" aria-hidden=\"true\"></i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"UserName\"\r\n            value={formData.username}\r\n            onChange={(e) => {\r\n              setFormData({\r\n                ...formData,\r\n                username: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i className=\"fal fa-lock\" aria-hidden=\"true\"></i>\r\n          <input\r\n            placeholder=\"Passcode\"\r\n            type=\"text\"\r\n            value={formData.password}\r\n            onChange={(e) => {\r\n              setFormData({\r\n                ...formData,\r\n                password: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i className=\"fal fa-lock\" aria-hidden=\"true\"></i>\r\n          <input\r\n            placeholder=\"Repeat Passcode\"\r\n            type=\"text\"\r\n            value={formData.password2}\r\n            onChange={(e) => {\r\n              setFormData({\r\n                ...formData,\r\n                password2: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (\r\n              formData.username &&\r\n              formData.password &&\r\n              formData.password === formData.password2\r\n            ) {\r\n              getRegister(\r\n                formData.username,\r\n                formData.password,\r\n                redirectAndClear\r\n              );\r\n            } else {\r\n              notification[\"error\"]({\r\n                description: \"Passwords are not the same\",\r\n                placement:\r\n                  window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n                duration: 4,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Register\r\n        </button>\r\n        <p>\r\n          Already Signed Up?\r\n          <span\r\n            onClick={() => {\r\n              window.location.hash = \"login\";\r\n            }}\r\n          >\r\n            Login\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, MainActions)(Register);\r\n","import React from \"react\";\r\nimport { LoginView } from \"views\";\r\n\r\nexport default () => (\r\n  <div data-route=\"login\">\r\n    <LoginView />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { HomeView } from \"views\";\r\n\r\nexport default () => (\r\n  <div data-route=\"home\">\r\n    <HomeView />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { RegisterView } from \"views\";\r\n\r\nexport default () => (\r\n  <div data-route=\"login\">\r\n    <RegisterView />\r\n  </div>\r\n);\r\n","import { notification } from \"antd\";\r\nexport const isLocal = window.location.href.match(/127|192|localhost/g);\r\n\r\nexport const endpoint = isLocal\r\n  ? \"http://192.168.5.220:5000/api\"\r\n  : \"https://chat-al.herokuapp.com/api/\";\r\n\r\nconst hasCode = (error, status) => {\r\n  if (\r\n    error?.response?.status === parseInt(status) ||\r\n    error.error?.response?.status === parseInt(status) ||\r\n    error?.response?.status === parseInt(status)\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const handleError = (error) => {\r\n  // console.log(\"error handler\", error, { error });\r\n\r\n  if (hasCode(error, 401)) {\r\n    //loged out\r\n    window.store.dispatch({ type: \"SET_UNAUTHORIZATION\" });\r\n  } else if (error?.message === \"Network Error\") {\r\n    //network error\r\n  } else if (hasCode(error, 445)) {\r\n    //\r\n  } else if (hasCode(error, 440)) {\r\n    //window.store.dispatch({ type: \"SET_UNAUTHORIZATION\" });\r\n  } else if (hasCode(error, 429)) {\r\n    //\r\n  } else if (hasCode(error, 403)) {\r\n    //\r\n  } else {\r\n    notification[\"error\"]({\r\n      message: error?.response?.data?.message || \"error Message\",\r\n      description:\r\n        error?.response?.data?.errors &&\r\n        Object.values(error.response.data.errors),\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n  }\r\n  return Promise.reject(error);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { AuthActions, MainActions } from \"redux-store/models\";\r\nimport { connect } from \"react-redux\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport * as Routes from \"routes\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"styles/general.css\";\r\nimport { loadSocket } from \"./socket\";\r\nconst Root = ({ loginData = {} }) => {\r\n  useEffect(() => {\r\n    loadSocket();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div></div>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {loginData.token ? (\r\n              <Redirect to=\"/home\" />\r\n            ) : (\r\n              <Redirect to=\"/login\" />\r\n            )}\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/login\"\r\n            render={() => {\r\n              if (loginData.token) {\r\n                return <Redirect to=\"/home\" />;\r\n              } else {\r\n                return <Routes.Login />;\r\n              }\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            render={() => {\r\n              if (loginData.token) {\r\n                return <Redirect to=\"/home\" />;\r\n              } else {\r\n                return <Routes.Register />;\r\n              }\r\n            }}\r\n          />\r\n          <Route path=\"/home\">\r\n            {loginData.token ? <Routes.Home /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mstp = ({ auth: { loginData } }) => ({ loginData });\r\nexport default connect(mstp, { ...AuthActions, ...MainActions })(Root);\r\n","import { io } from \"socket.io-client\";\r\nimport { isLocal } from \"config\";\r\nconst socketUrlLocal = \"http://192.168.5.220:5000\";\r\nconst socketUrl = \"https://chat-al.herokuapp.com\";\r\nexport const loadSocket = () => {\r\n  const socket = io(isLocal ? socketUrlLocal : socketUrl);\r\n  window.socket = socket;\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"socket connected\");\r\n  });\r\n  socket.on(\"FromAPI\", (data) => {\r\n    console.log(\"FromAPI\", data);\r\n  });\r\n  socket.on(\"chat_msg\", (data) => {\r\n    console.log(\"chat_msg\", data);\r\n    window.store.dispatch({\r\n      type: \"UPDATE_ROOM_MESSAGES\",\r\n      data,\r\n    });\r\n    document\r\n      .querySelector(\".msg:last-child\")\r\n      .scrollIntoView({ behavior: \"smooth\" });\r\n  });\r\n\r\n  socket.on(\"message\", function (data) {\r\n    console.log(\"message\", data);\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { endpoint, handleError } from \"config\";\r\n\r\nexport const instanceAxios = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\ninstanceAxios.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers = {\r\n      Accept: \"application/json\",\r\n    };\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstanceAxios.interceptors.response.use(\r\n  (response) => {\r\n    // console.log(\"response\", response);\r\n    return response;\r\n  },\r\n  (error) => handleError(error)\r\n);\r\n\r\nexport const Login = (username, password) => {\r\n  return instanceAxios\r\n    .get(\"/login\", {\r\n      params: {\r\n        username,\r\n        password,\r\n      },\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return instanceAxios\r\n    .get(\"/check\", {\r\n      params: {\r\n        token,\r\n      },\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const submitMsg = (id, text, token) => {\r\n  return instanceAxios\r\n    .post(\"/sendMsg\", {\r\n      roomId: id,\r\n      text,\r\n      token,\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const createRoom = (name, image, description, token) => {\r\n  return instanceAxios\r\n    .post(\"/createRoom\", {\r\n      name,\r\n      image,\r\n      description,\r\n      token,\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const deleteRoom = (id, token) => {\r\n  return instanceAxios\r\n    .post(\"/deleteRoom\", {\r\n      id,\r\n      token,\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n","import { put, call } from \"redux-saga/effects\";\r\nimport AuthActions from \"../models/auth\";\r\n\r\nimport * as AuthReq from \"services/auth\";\r\nimport { notification } from \"antd\";\r\n\r\nexport function* getLogin({ username, password }) {\r\n  const response = yield call(AuthReq.Login, username, password);\r\n\r\n  if (response) {\r\n    yield put(AuthActions.setLoginData(response.data));\r\n    if (response.data?.token) {\r\n      localStorage.setItem(\"loginData\", JSON.stringify(response.data));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* checkToken({ token }) {\r\n  const response = yield call(AuthReq.checkToken, token);\r\n  if (response?.data) {\r\n    notification[\"success\"]({\r\n      description: JSON.stringify(response?.data),\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* submitMsg({ id, text, token }) {\r\n  const response = yield call(AuthReq.submitMsg, id, text, token);\r\n  if (response.data) {\r\n  }\r\n}\r\nexport function* createRoom({ name, image, description, token, callBack }) {\r\n  const response = yield call(\r\n    AuthReq.createRoom,\r\n    name,\r\n    image,\r\n    description,\r\n    token\r\n  );\r\n  //console.log(\"response\", response);\r\n  if (response.data) {\r\n    notification[\"success\"]({\r\n      description: JSON.stringify(response?.data),\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n    callBack();\r\n  }\r\n}\r\n\r\nexport function* deleteRoom({ id, token }) {\r\n  const response = yield call(AuthReq.deleteRoom, id, token);\r\n  if (response.data) {\r\n    notification[\"success\"]({\r\n      description: JSON.stringify(response?.data),\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n    yield put({ type: \"GET_ROOMS\" });\r\n    //window.store.dispatch({ type: \"GET_ROOMS\" });\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { endpoint, handleError } from \"config\";\r\n\r\nexport const instanceAxios = axios.create({\r\n  baseURL: endpoint,\r\n});\r\n\r\ninstanceAxios.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers = {\r\n      Accept: \"application/json\",\r\n    };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstanceAxios.interceptors.response.use(\r\n  (response) => {\r\n    // console.log(\"response\", response);\r\n    return response;\r\n  },\r\n  (error) => handleError(error)\r\n);\r\n\r\nexport const register = (username, password) => {\r\n  return instanceAxios\r\n    .post(`/register`, {\r\n      username,\r\n      password,\r\n    })\r\n    .catch((error) => ({ error }));\r\n};\r\n\r\nexport const getRooms = () => {\r\n  return instanceAxios.get(\"/getRooms\").catch((error) => ({ error }));\r\n};\r\n\r\nexport const getRoomData = (id) => {\r\n  return instanceAxios.get(`/getRoomData/${id}`).catch((error) => ({ error }));\r\n};\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\nimport AuthActions from \"../models/auth\";\r\nimport MainActions from \"../models/main\";\r\nimport * as MainReq from \"services/main\";\r\n\r\nexport function* getRegister({ username, password, redirectAndClear }) {\r\n  const response = yield call(MainReq.register, username, password);\r\n  if (response.data) {\r\n    redirectAndClear();\r\n    notification[\"success\"]({\r\n      description: response?.data?.message,\r\n      placement: window.innerWidth <= 1024 ? \"topRight\" : \"bottomRight\",\r\n      duration: 4,\r\n    });\r\n    if (response.data?.token) {\r\n      yield put(\r\n        AuthActions.setLoginData({\r\n          token: response?.data?.token,\r\n          username: response?.data?.userFound?.username,\r\n          id: response?.data?.userFound?._id,\r\n        })\r\n      );\r\n      localStorage.setItem(\r\n        \"loginData\",\r\n        JSON.stringify({\r\n          token: response?.data?.token,\r\n          username: response?.data?.userFound?.username,\r\n          id: response?.data?.userFound?._id,\r\n        })\r\n      );\r\n      window.location.hash = \"home\";\r\n    }\r\n  }\r\n}\r\n\r\nexport function* getRooms({}) {\r\n  const response = yield call(MainReq.getRooms);\r\n  if (response.data) {\r\n    yield put(MainActions.setRooms(response.data?.data));\r\n  }\r\n}\r\n\r\nexport function* getRoomData({ id }) {\r\n  const response = yield call(MainReq.getRoomData, id);\r\n  if (response.data) {\r\n    yield put(MainActions.setRoomData(response.data?.data));\r\n  }\r\n}\r\n\r\nexport function* updateRoomMessages({ data }) {\r\n  let roomData = yield select((state) => {\r\n    return state.main.roomData;\r\n  });\r\n\r\n  roomData = {\r\n    ...roomData,\r\n    messages: [...roomData.messages, data],\r\n  };\r\n  yield put(MainActions.setRoomData(roomData));\r\n}\r\n","import { takeLatest, all } from \"redux-saga/effects\";\r\n\r\nimport * as AuthGenerators from \"./AuthSagas\";\r\nimport * as MainGenerators from \"./MainSagas\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    // AUTH\r\n    ...[\r\n      takeLatest(\"GET_LOGIN\", AuthGenerators.getLogin),\r\n      takeLatest(\"CHECK_TOKEN\", AuthGenerators.checkToken),\r\n      takeLatest(\"SUBMIT_MSG\", AuthGenerators.submitMsg),\r\n      takeLatest(\"CREATE_ROOM\", AuthGenerators.createRoom),\r\n      takeLatest(\"DELETE_ROOM\", AuthGenerators.deleteRoom),\r\n    ],\r\n    // MAIN\r\n    ...[\r\n      takeLatest(\"GET_REGISTER\", MainGenerators.getRegister),\r\n      takeLatest(\"GET_ROOMS\", MainGenerators.getRooms),\r\n      takeLatest(\"GET_ROOM_DATA\", MainGenerators.getRoomData),\r\n      takeLatest(\"UPDATE_ROOM_MESSAGES\", MainGenerators.updateRoomMessages),\r\n    ],\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { reducer as AuthReducer } from \"./models/auth\";\r\nimport { reducer as MainReducer } from \"./models/main\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: AuthReducer,\r\n  main: MainReducer,\r\n});\r\n\r\nexport function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  //redux extension logger\r\n  const composeEnhancers =\r\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n      : compose;\r\n  const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\r\n  return {\r\n    ...createStore(rootReducer, enhancer),\r\n    runSaga: sagaMiddleware.run,\r\n  };\r\n}\r\n\r\nexport const store = configureStore();\r\nstore.runSaga(rootSaga);\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Root from \"./Root\";\r\nimport { store } from \"redux-store/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Root />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}